cmake_minimum_required(VERSION 3.1)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "")
endif()

string(TOUPPER "$ENV{ALEX_SDK_ECU_TARGET}" SDK_TARGET)
string(REGEX MATCH "[0-9]+\\.[0-9]+\\.[0-9]+" SDK_VERSION $ENV{ALEX_SDK_SRE_VERSION})

message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "SDK version: ${SDK_TARGET} ${SDK_VERSION}")

string(REPLACE "." ";" SDK_VERSION_LIST ${SDK_VERSION})
list(GET SDK_VERSION_LIST 0 SDK_VERSION_MAJOR)
list(GET SDK_VERSION_LIST 1 SDK_VERSION_MINOR)
list(GET SDK_VERSION_LIST 2 SDK_VERSION_PATCH)

math(EXPR SDK_VERSION_CODE "(${SDK_VERSION_MAJOR} << 16) | (${SDK_VERSION_MINOR} << 8) | ${SDK_VERSION_PATCH}")

set(COMMON_FLAGS "-DSDK_TARGET_${SDK_TARGET} -DSDK_VERSION=\\\"${SDK_VERSION}\\\" -DSDK_VERSION_CODE=${SDK_VERSION_CODE}")
set(COMMON_FLAGS_RELEASE "-DNDEBUG -flto")

set(CMAKE_C_FLAGS_DEBUG "-O0 -g ${COMMON_FLAGS}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG}" CACHE STRING "")

set(CMAKE_C_FLAGS_RELEASE "-O2 -s ${COMMON_FLAGS} ${COMMON_FLAGS_RELEASE}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}" CACHE STRING "")

set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g ${COMMON_FLAGS} ${COMMON_FLAGS_RELEASE}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO}" CACHE STRING "")

set(CMAKE_C_FLAGS_MINSIZEREL "-Os -s ${COMMON_FLAGS} ${COMMON_FLAGS_RELEASE}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_C_FLAGS_MINSIZEREL}" CACHE STRING "")

if(CMAKE_BUILD_TYPE MATCHES "Release|RelWithDebInfo|MinSizeRel")
    find_program(FIND_EXECUTABLE find)

    execute_process(COMMAND "${FIND_EXECUTABLE}" "$ENV{OECORE_NATIVE_SYSROOT}"
                    -name liblto_plugin.so -print0
                    OUTPUT_VARIABLE LTO_PLUGIN)

    message(STATUS "LTO plugin: ${LTO_PLUGIN}")

    set(ARCHIVE_ARGS "--plugin ${LTO_PLUGIN}")

    set(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> cq <TARGET> ${ARCHIVE_ARGS} <LINK_FLAGS> <OBJECTS>")
    set(CMAKE_CXX_ARCHIVE_CREATE "${CMAKE_C_ARCHIVE_CREATE}")

    set(CMAKE_C_ARCHIVE_APPEND "<CMAKE_AR> q <TARGET> ${ARCHIVE_ARGS} <LINK_FLAGS> <OBJECTS>")
    set(CMAKE_CXX_ARCHIVE_APPEND "${CMAKE_C_ARCHIVE_APPEND}")

    set(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET> ${ARCHIVE_ARGS}")
    set(CMAKE_CXX_ARCHIVE_FINISH "${CMAKE_C_ARCHIVE_FINISH}")
endif()
